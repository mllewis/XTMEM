m.3sub = mean(three_subordinate),
sd.3sub = sd(three_subordinate),
n= n()) %>%
do(data.frame(d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$d,
var.d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$var.d))%>%
mutate(high = d + (1.96*var.d),
low = d - (1.96*var.d),
es.type = "nonpaired",
exp = c(1:4))  # fix this
effect.sizes = bind_rows(effect.sizes.paired,
effect.sizes.npaired) %>%
mutate(exp = as.factor(exp),
n = 50) # fix this %>%
# make experiment nums meaningful
effect.sizes$exp = plyr::mapvalues(effect.sizes$exp ,
from = c("1", "2", "3",
"4"),
to = c("E1 XTa replication ", "E2 SPSS replication ", "E3 XTa replication, blocked/diff labels", "E4 SPSS replication, blocked/diff labels"))
Old means and sd based on SPSS table 1.
```{r}
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_adults_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
kable(df)
```
Calculate old effect sizes
```{r}
original.effect.sizes$d = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$d
original.effect.sizes$d_var = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$var.d
original.effect.sizes = original.effect.sizes %>%
mutate(high = d + (1.96*d_var),
low = d - (1.96*d_var)) %>%
select(-one_means, -three_means, -one_sd, -three_sd) %>%
mutate(es.type = "nonpaired")
```
all.es$exp
all.es$design <- c("simult.","simult.","simult.", "seq.", "seq.", "simult.", "simult.", "simult.", "seq.", "simult.", "seq." ,"simult.", "seq.", "simult.", "seq." )
ggplot(all.es, aes(x = exp, y = d, color = es.type)) +
geom_point(aes(size = n))+
geom_linerange(aes(ymax =high, ymin=low),
position = position_dodge(width = 0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(design~., drop = TRUE, scales = "free_y")+
coord_flip() +
geom_hline(yintercept = 0, linetype = 2) +
ggtitle("Effect size") +
ylab("Experiment")
effect.sizes.npaired  = all.ms.subj %>%
group_by(exp) %>%
summarize(m.one = mean(one),
sd.one = sd(one),
m.3sub = mean(three_subordinate),
sd.3sub = sd(three_subordinate),
n= n()) %>%
do(data.frame(d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$d,
var.d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$var.d))%>%
mutate(high = d + (1.96*var.d),
low = d - (1.96*var.d),
es.type = "nonpaired",
exp = c(1:4))  # fix this
effect.sizes = bind_rows(effect.sizes.paired,
effect.sizes.npaired) %>%
mutate(exp = as.factor(exp),
n = 50) # fix this %>%
# make experiment nums meaningful
effect.sizes$exp = plyr::mapvalues(effect.sizes$exp ,
from = c("1", "2", "3",
"4"),
to = c("E1 XTa replication ", "E2 SPSS replication ", "E3 XTa replication, blocked/diff labels", "E4 SPSS replication, blocked/diff labels"))
Old means and sd based on SPSS table 1.
```{r}
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_adults_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
kable(df)
```
Calculate old effect sizes
```{r}
original.effect.sizes$d = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$d
original.effect.sizes$d_var = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$var.d
original.effect.sizes = original.effect.sizes %>%
mutate(high = d + (1.96*d_var),
low = d - (1.96*d_var)) %>%
select(-one_means, -three_means, -one_sd, -three_sd) %>%
mutate(es.type = "nonpaired")
```
Bind old and new together and plot
```{r}
all.es = bind_rows(original.effect.sizes, effect.sizes)
all.es$design <- c("simult.","simult.","simult.", "seq.", "seq.", "simult.", "simult.", "simult.", "seq.", "simult.", "seq." ,"simult.", "seq.", "simult.", "seq." )
ggplot(all.es, aes(x = exp, y = d, color = es.type)) +
geom_point(aes(size = n))+
geom_linerange(aes(ymax =high, ymin=low),
position = position_dodge(width = 0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(design~., drop = TRUE, scales = "free_y")+
coord_flip() +
geom_hline(yintercept = 0, linetype = 2) +
ggtitle("Effect size") +
ylab("Experiment")
Old means and sd based on SPSS table 1.
```{r}
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
kable(df)
```
Calculate old effect sizes
```{r}
original.effect.sizes$d = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$d
original.effect.sizes$d_var = mes(original.effect.sizes$one_means/100, original.effect.sizes$three_means/100, original.effect.sizes$one_sd/100,
original.effect.sizes$three_sd/100,original.effect.sizes$n, original.effect.sizes$n, verbose = F)$var.d
original.effect.sizes = original.effect.sizes %>%
mutate(high = d + (1.96*d_var),
low = d - (1.96*d_var)) %>%
select(-one_means, -three_means, -one_sd, -three_sd) %>%
mutate(es.type = "nonpaired")
```
Bind old and new together and plot
```{r}
all.es = bind_rows(original.effect.sizes, effect.sizes)
all.es$design <- c("simult.","simult.","simult.", "seq.", "seq.", "simult.", "simult.", "simult.", "seq.", "simult.", "seq." ,"simult.", "seq.", "simult.", "seq." )
ggplot(all.es, aes(x = exp, y = d, color = es.type)) +
geom_point(aes(size = n))+
geom_linerange(aes(ymax =high, ymin=low),
position = position_dodge(width = 0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(design~., drop = TRUE, scales = "free_y")+
coord_flip() +
geom_hline(yintercept = 0, linetype = 2) +
ggtitle("Effect size") +
ylab("Experiment")
```
ggplot(all.es, aes(x = exp, y = d, color = es.type)) +
geom_point(aes(size = n))+
geom_linerange(aes(ymax =high, ymin=low),
position = position_dodge(width = 0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(design~., drop = TRUE, scales = "free_y")+
coord_flip() +
geom_hline(yintercept = 0, linetype = 2) +
ggtitle("Effect size") +
xlab("Experiment")
```
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
all.ms.subj = all.d %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, exp, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
filter(condition == "one" | condition == "three_subordinate", variable == 'prop_bas') %>%
spread(condition, value) %>%
ungroup () %>%
select(-variable)
conf.ints = all.ms.subj %>%
group_by(exp) %>%
do(data.frame(conf.int = effsize::cohen.d(.$one, .$three_subordinate, paired = T)$conf.int))  %>%
ungroup() %>%
mutate(bound=rep(c("low", "high"),
length.out = EXPTNUM*2)) %>%
spread(bound, conf.int)
effect.sizes.paired = all.ms.subj %>%
group_by(exp) %>%
do(data.frame(d = effsize::cohen.d(.$one, .$three_subordinate, paired = T)$estimate)) %>%
left_join(conf.ints) %>%
ungroup () %>%
mutate(es.type = "paired",
exp = as.numeric(exp))
effect.sizes.npaired  = all.ms.subj %>%
group_by(exp) %>%
summarize(m.one = mean(one),
sd.one = sd(one),
m.3sub = mean(three_subordinate),
sd.3sub = sd(three_subordinate),
n= n()) %>%
do(data.frame(d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$d,
var.d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$var.d))%>%
mutate(high = d + (1.96*var.d),
low = d - (1.96*var.d),
es.type = "nonpaired",
exp = c(1:4))  # fix this
effect.sizes = bind_rows(effect.sizes.paired,
effect.sizes.npaired) %>%
mutate(exp = as.factor(exp),
n = 50) # fix this %>%
# make experiment nums meaningful
effect.sizes$exp = plyr::mapvalues(effect.sizes$exp ,
from = c("1", "2", "3", "4"),
to = c("E1 XTa replication ", "E2 SPSS replication ",
"E3 XTa replication, blocked/diff labels",
"E4 SPSS replication, blocked/diff labels"))
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = T, tidy = F, fig.height = 4)
```
d4 = read.csv(a.data.filename)
d4.long = d4 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d4.munged = d4.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp4/analysis")
d4 = read.csv(a.data.filename)
d4.long = d4 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d4.munged = d4.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
d4 = read.csv(a.data.filename)
```{r, constants}
EXPTNUM <- 4
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
---
title: XTMEM4
subtitle:
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
code_folding: show
---
******
******
Replication of SPSS 2011 with 2 methodological modifications from exp 2 (follwing SPSS11): Blocking and reordering of trials (sub first), and using different label for all 12 trials.
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
### Read in raw data and anonymize
```{r, constants}
EXPTNUM <- 4
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
#write.csv(d.anonymized, a.data.filename)
```
### Munge
```{r}
d4 = read.csv(a.data.filename)
d4.long = d4 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d4.munged = d4.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d4.munged$exp = EXPTNUM
#write.csv(d4.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
### Reproduce XT2007a Figure 5.
```{r, fig.width = 8}
ms4 = d4.munged %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
group_by(condition,variable) %>%
multi_boot_standard(column = "value")  %>%
mutate(variable = as.factor(variable))
ms.plot <- ms4
ms.plot$variable = factor(ms.plot$variable,levels(ms.plot$variable)[c(2,1,3)])
ms.plot$condition = factor(ms.plot$condition,levels(ms.plot$condition)[c(4,2,1,3)])
ms.plot$condition = plyr::mapvalues(ms.plot$condition,
from = c("one", "3bas", "3sub",
"3sup"),
to = c("1", "3 basic", "3 sub.", "3 super."))
ggplot(ms.plot, aes(x = condition, y = mean, group = variable, fill = variable)) +
geom_bar(position = "dodge", stat = "identity") +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
position=position_dodge(width = .9)) +
ylab("Proportion of \ntest objects chosen") +
xlab("Examples") +
theme_bw() +
theme(legend.title = element_blank())
```
Previous experiments plotted as by SPSS:
Read in all previous data and bind to current dataset
```{r}
files = dir("../../../data/")
all.d = data.frame()
for (i in 1:length(files)[1]) {
s <- read.csv(paste0("../../../data/", files[i]))
all.d = bind_rows(all.d, data.frame(s))
}
```
All experiments:
```{r}
all.d$condition = plyr::mapvalues(all.d$condition,
from = c("one", "3bas", "3sub", "3sup"),
to = c("one", "three_basic",
"three_subordinate",
"three_superordinate"))
all.d$condition = as.factor(all.d$condition)
all.ms = all.d %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, exp, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
group_by(condition,variable, exp) %>%
multi_boot_standard(column = "value")  %>%
ungroup() %>%
mutate(variable = as.factor(variable)) %>%
filter(condition == "one" | condition == "three_subordinate") %>%
filter(variable == "prop_bas")
ggplot(all.ms, aes(x = exp, y = mean, group = condition, fill = condition)) +
geom_bar(position = "dodge", stat = "identity") +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
position=position_dodge(width = .9)) +
ylim(0,1)+
ylab("Proportion basic-level choices ") +
xlab("Experiment") +
theme_bw() +
theme(legend.title = element_blank())
```
## calculate effect sizes
Calculate new effect sizes.
```{r}
all.ms.subj = all.d %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, exp, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
filter(condition == "one" | condition == "three_subordinate", variable == 'prop_bas') %>%
spread(condition, value) %>%
ungroup () %>%
select(-variable)
conf.ints = all.ms.subj %>%
group_by(exp) %>%
do(data.frame(conf.int = effsize::cohen.d(.$one, .$three_subordinate, paired = T)$conf.int))  %>%
ungroup() %>%
mutate(bound=rep(c("low", "high"),
length.out = EXPTNUM*2)) %>%
spread(bound, conf.int)
effect.sizes.paired = all.ms.subj %>%
group_by(exp) %>%
do(data.frame(d = effsize::cohen.d(.$one, .$three_subordinate, paired = T)$estimate)) %>%
left_join(conf.ints) %>%
ungroup () %>%
mutate(es.type = "paired",
exp = as.numeric(exp))
effect.sizes.npaired  = all.ms.subj %>%
group_by(exp) %>%
summarize(m.one = mean(one),
sd.one = sd(one),
m.3sub = mean(three_subordinate),
sd.3sub = sd(three_subordinate),
n= n()) %>%
do(data.frame(d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$d,
var.d = mes(.$m.one, .$m.3sub, .$sd.one,
.$sd.3sub, .$n, .$n, verbose = F)$var.d))%>%
mutate(high = d + (1.96*var.d),
low = d - (1.96*var.d),
es.type = "nonpaired",
exp = c(1:4))  # fix this
effect.sizes = bind_rows(effect.sizes.paired,
effect.sizes.npaired) %>%
mutate(exp = as.factor(exp),
n = 50) # fix this %>%
# make experiment nums meaningful
effect.sizes$exp = plyr::mapvalues(effect.sizes$exp ,
from = c("1", "2", "3", "4"),
to = c("E1 XTa replication ", "E2 SPSS replication ",
"E3 XTa replication, blocked/diff labels",
"E4 SPSS replication, blocked/diff labels"))
```
Old means and sd based on SPSS table 1.
```{r}
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
kable(df)
```
original.effect.sizes = data.frame(exp = c("XT_adults_e1", "XT_children_e2", "SPSS_e1",
"SPSS_e2",
"SPSS_e3",
"SPSS_eS1",
"SPSS_eS2"),
one_means = c(76, 40, 48.24, 30.83, 39.91, 24.56, 15.79),
three_means = c(9, 6, 10.53, 53.33, 51.75, 16.67, 11.40),
one_sd = c(40.40, 40.40, 40.40,37.18,35.20,32.09,24.51),
three_sd = c(24.97, 24.97, 24.97,36.11,42.63,25.45,24.25),
n = c(22, 36, 19, 20, 19,19,19))
