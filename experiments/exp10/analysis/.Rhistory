}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
``
Munge
```{r}
d7 = read.csv(a.data.filename)
d7.long = d7 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d7.munged = d7.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d7.munged$exp = EXPTNUM
write.csv(d7.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp8/analysis")
---
title: XTMEM8
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
toc: true
code_folding: show
---
******
******
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Read in and process data
```{r, constants}
EXPTNUM <- 8
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
Munge
```{r}
d8 = read.csv(a.data.filename)
d8.long = d8 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d8.munged = d8.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d8.munged$exp = EXPTNUM
write.csv(d8.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/analysis")
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Reproduce SPSS Fig. 3
(plotting proportion basic level)
Read in all previous data and bind to current dataset
```{r}
files = dir("../data/")
all.d = data.frame()
for (i in 1:length(files)[1]) {
s <- read.csv(paste0("../data/", files[i]))
all.d = bind_rows(all.d, data.frame(s))
}
exp_key = read.csv("experiment_key.csv")
all.d = left_join(all.d, exp_key)
```
Get means and plot
```{r}
all.d$condition = plyr::mapvalues(all.d$condition,
from = c("one", "3bas", "3sub", "3sup"),
to = c("one", "three_basic",
"three_subordinate",
"three_superordinate"))
all.d$condition = as.factor(all.d$condition)
all.ms = all.d %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, exp, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
group_by(condition,variable, exp) %>%
multi_boot_standard(column = "value")  %>%
ungroup() %>%
mutate(variable = as.factor(variable)) %>%
filter(condition == "one" | condition == "three_subordinate") %>%
filter(variable == "prop_bas") %>%
left_join(exp_key) %>%
mutate(exp = as.factor(exp))
ggplot(all.ms, aes(x = exp, y = mean, group = condition, fill = condition)) +
geom_bar(position = "dodge", stat = "identity") +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
position=position_dodge(width = .9)) +
facet_grid(timing~order * one_3sub_label) +
ylim(0,1)+
ylab("Proportion basic-level choices ") +
xlab("Experiment") +
theme_bw() +
theme(legend.title = element_blank())
```
all.ms = all.d %>%
gather(variable, value, c(prop_sub, prop_bas, prop_sup)) %>%
group_by(condition,variable, exp, subids) %>%
mutate(value = as.numeric(value)) %>%
summarize(value = mean(value)) %>%
group_by(condition,variable, exp) %>%
multi_boot_standard(column = "value")  %>%
ungroup() %>%
mutate(variable = as.factor(variable)) %>%
filter(condition == "one" | condition == "three_subordinate") %>%
filter(variable == "prop_bas") %>%
mutate(exp = as.factor(exp)) %>%
left_join(exp_key)
ggplot(all.ms, aes(x = exp, y = mean, group = condition, fill = condition)) +
geom_bar(position = "dodge", stat = "identity") +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
position=position_dodge(width = .9)) +
facet_grid(order * one_3sub_label ~ timing) +
ylim(0,1)+
ylab("Proportion basic-level choices ") +
xlab("Experiment") +
theme_bw() +
theme(legend.title = element_blank())
ggplot(all.es, aes(x = exp, y = d)) +
geom_point(color = "red", size = 2)+
geom_linerange(aes(ymax =high, ymin=low),
position = position_dodge(width = 0), color = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(order * one_3sub_label ~ timing, drop = TRUE, scales = "free_y")+
coord_flip() +
geom_hline(yintercept = 0, linetype = 2) +
ggtitle("Effect size") +
xlab("Experiment")
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp8/analysis")
---
title: XTMEM8
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
toc: true
code_folding: show
---
******
******
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Read in and process data
```{r, constants}
EXPTNUM <- 8
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
Munge
```{r}
d8 = read.csv(a.data.filename)
d8.long = d8 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d8.munged = d8.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d8.munged$exp = EXPTNUM
write.csv(d8.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp9/analysis")
---
title: XTMEM9
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
toc: true
code_folding: show
---
******
******
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Read in and process data
```{r, constants}
EXPTNUM <- 9
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
Munge
```{r}
d9 = read.csv(a.data.filename)
d9.long = d9 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d9.munged = d9.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
``
```{r, eval = F}
d9.munged$exp = EXPTNUM
write.csv(d9.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp10/analysis")
---
title: XTMEM10
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
toc: true
code_folding: show
---
******
******
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Read in and process data
```{r, constants}
EXPTNUM <- 10
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
Munge
```{r}
d10 = read.csv(a.data.filename)
d10.long = d10 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d10.munged = d10.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d10.munged$exp = EXPTNUM
write.csv(d10.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/analysis")
setwd("/Documents/GRADUATE_SCHOOL/Projects/XTMEM/experiments/exp10/analysis")
---
title: XTMEM10
author: Molly Lewis
date: "`r Sys.Date()`"
output:
html_document:
number_sections: false
theme: cerulean
toc_float: true
toc: true
code_folding: show
---
******
******
```{r setup, include = F}
rm(list=ls())
# load packages
library(knitr)
library(rmarkdown)
library(broom)
library(tidyverse)
library(langcog)
library(jsonlite)
library(stringr)
library(png)
library(grid)
library(forcats)
library(effsize)
library(compute.es)
source("../../../analysis/useful_ML.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, cache = F, tidy = F, fig.height = 4)
```
## Read in and process data
```{r, constants}
EXPTNUM <- 10
a.data.filename <- paste0("exp", EXPTNUM, "_A.csv")
```
```{r, eval = F}
files = dir("../production-results/")
d = data.frame()
for (i in 1:length(files)[1]) {
s <- fromJSON(paste("../production-results/", files[i], sep = ""))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d = bind_rows(d, data.frame(s))
}
names(d) <- str_replace(names(d), "answers.", "")
d.anonymized <- anonymize.sids(d, "WorkerId")
write.csv(d.anonymized, a.data.filename)
```
Munge
```{r}
d10 = read.csv(a.data.filename)
d10.long = d10 %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d10.munged = d10.long %>%
select(subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
```
```{r, eval = F}
d10.munged$exp = EXPTNUM
write.csv(d10.munged, paste0("../../../data/exp", EXPTNUM, "_data_munged.csv"), row.names = F)
```
