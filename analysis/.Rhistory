scale_x_continuous(breaks = c(1, 3, 5), limits = c(.5, 5.5),
labels = c("XT","SPSS","LF")) +
ylab("Cohen's d") +
xlab("Paper") +
guides(color = guide_legend("Label"),
shape = guide_legend("Blocking"))  +
ggthemes::theme_few()
offset <- .3
all_es2 <- all_es %>%
#select(exp_recoded, source, timing, order) %>%
#arrange(timing, order) %>%
mutate(source = replace(source, exp_recoded == "SPSS_eS1", 3 - offset),
source = replace(source, exp_recoded == "SPSS_eS2", 3 + offset),
source =  replace(source, exp_recoded == "SPSS_e2", 3 - offset),
source = replace(source, exp_recoded == "SPSS_e3", 3 + offset),
source = replace(source, exp_recoded == "1", 5 + offset),
source = replace(source, exp_recoded == "2", 5 - offset), # 3
source = replace(source, exp_recoded == "8", 5 - offset),
source = replace(source, exp_recoded == "9", 5 + offset), # 7
source = replace(source, exp_recoded == "4", 5 - offset),
source = replace(source, exp_recoded == "5", 5 + offset), #6
source = replace(source, exp_recoded == "10", 5 - offset),
source = replace(source, exp_recoded == "11", 5 + offset)) # 12
# effect size fig
ggplot(all_es2) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = d_low, ymax = d_high),
fill = "red", alpha = 0.05, inherit.aes = FALSE, data = ma_es) +
geom_hline(aes(yintercept = d), data = ma_es, color = "red") +
scale_color_manual(values = c("black","grey63")) +
# x = jitter(source, 1.5)
geom_pointrange(aes(x =  source,  y = d, ymax = high,
ymin = low, color = one_3sub_label, shape = fct_rev(blocking)),
size = .5) +
geom_hline(yintercept = 0, linetype = 2, color = "black") +
facet_grid(order ~ timing) +
scale_x_continuous(breaks = c(1, 3, 5), limits = c(.5, 5.5),
labels = c("XT","SPSS","LF")) +
ylab("Cohen's d") +
xlab("Paper") +
guides(color = guide_legend("Label"),
shape = guide_legend("Blocking"))  +
ggthemes::theme_few()
offset <- .4
all_es2 <- all_es %>%
#select(exp_recoded, source, timing, order) %>%
#arrange(timing, order) %>%
mutate(source = replace(source, exp_recoded == "SPSS_eS1", 3 - offset),
source = replace(source, exp_recoded == "SPSS_eS2", 3 + offset),
source =  replace(source, exp_recoded == "SPSS_e2", 3 - offset),
source = replace(source, exp_recoded == "SPSS_e3", 3 + offset),
source = replace(source, exp_recoded == "1", 5 + offset),
source = replace(source, exp_recoded == "2", 5 - offset), # 3
source = replace(source, exp_recoded == "8", 5 - offset),
source = replace(source, exp_recoded == "9", 5 + offset), # 7
source = replace(source, exp_recoded == "4", 5 - offset),
source = replace(source, exp_recoded == "5", 5 + offset), #6
source = replace(source, exp_recoded == "10", 5 - offset),
source = replace(source, exp_recoded == "11", 5 + offset)) # 12
# effect size fig
ggplot(all_es2) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = d_low, ymax = d_high),
fill = "red", alpha = 0.05, inherit.aes = FALSE, data = ma_es) +
geom_hline(aes(yintercept = d), data = ma_es, color = "red") +
scale_color_manual(values = c("black","grey63")) +
# x = jitter(source, 1.5)
geom_pointrange(aes(x =  source,  y = d, ymax = high,
ymin = low, color = one_3sub_label, shape = fct_rev(blocking)),
size = .5) +
geom_hline(yintercept = 0, linetype = 2, color = "black") +
facet_grid(order ~ timing) +
scale_x_continuous(breaks = c(1, 3, 5), limits = c(.5, 5.5),
labels = c("XT","SPSS","LF")) +
ylab("Cohen's d") +
xlab("Paper") +
guides(color = guide_legend("Label"),
shape = guide_legend("Blocking"))  +
ggthemes::theme_few()
```
offset <- .35
all_es2 <- all_es %>%
#select(exp_recoded, source, timing, order) %>%
#arrange(timing, order) %>%
mutate(source = replace(source, exp_recoded == "SPSS_eS1", 3 - offset),
source = replace(source, exp_recoded == "SPSS_eS2", 3 + offset),
source =  replace(source, exp_recoded == "SPSS_e2", 3 - offset),
source = replace(source, exp_recoded == "SPSS_e3", 3 + offset),
source = replace(source, exp_recoded == "1", 5 + offset),
source = replace(source, exp_recoded == "2", 5 - offset), # 3
source = replace(source, exp_recoded == "8", 5 - offset),
source = replace(source, exp_recoded == "9", 5 + offset), # 7
source = replace(source, exp_recoded == "4", 5 - offset),
source = replace(source, exp_recoded == "5", 5 + offset), #6
source = replace(source, exp_recoded == "10", 5 - offset),
source = replace(source, exp_recoded == "11", 5 + offset)) # 12
# effect size fig
ggplot(all_es2) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = d_low, ymax = d_high),
fill = "red", alpha = 0.05, inherit.aes = FALSE, data = ma_es) +
geom_hline(aes(yintercept = d), data = ma_es, color = "red") +
scale_color_manual(values = c("black","grey63")) +
# x = jitter(source, 1.5)
geom_pointrange(aes(x =  source,  y = d, ymax = high,
ymin = low, color = one_3sub_label, shape = fct_rev(blocking)),
size = .5) +
geom_hline(yintercept = 0, linetype = 2, color = "black") +
facet_grid(order ~ timing) +
scale_x_continuous(breaks = c(1, 3, 5), limits = c(.5, 5.5),
labels = c("XT","SPSS","LF")) +
ylab("Cohen's d") +
xlab("Paper") +
guides(color = guide_legend("Label"),
shape = guide_legend("Blocking"))  +
ggthemes::theme_few()
```
?add_footnote
library(kableExtra)
?add_footnote
setwd("~/Documents/research/Projects/L2ETS/studies/study1/analyses/translation_analysis")
```{r setup, include = F}
rm(list = ls())
# load packages
library(knitr)
library(rmarkdown)
library(tidyverse)
library(feather)
library(langcog)
library(text2vec)
library(ggalt)
library(stringr)
library(forcats)
library(lme4)
library(broom)
source("euclidean_space_helper.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, tidy = F, cache = F)
```
setwd("~/Documents/research/Projects/L2ETS/studies/study1/analyses/translation_analysis")
```{r setup, include = F}
rm(list = ls())
# load packages
library(knitr)
library(rmarkdown)
library(tidyverse)
library(feather)
library(langcog)
library(text2vec)
library(ggalt)
library(stringr)
library(forcats)
library(lme4)
library(broom)
source("euclidean_space_helper.R")
opts_chunk$set(echo = T, message = F, warning = F,
error = F, tidy = F, cache = F)
```
translated_words <- read.csv("data/top_hindi_german_words.csv",
encoding = "UTF-8")
hindi_words <- translated_words %>%
filter(L1_code == "HIN")
german_words <- translated_words %>%
filter(L1_code == "GER")  %>%
mutate(translation_1 = tolower(translation_1))
```
library(data.table)
translated_words <- read.csv("data/top_hindi_german_words.csv",
encoding = "UTF-8") %>%
as.data.table()
hindi_words <- translated_words %>%
filter(L1_code == "HIN")
german_words <- translated_words %>%
filter(L1_code == "GER")  %>%
mutate(translation_1 = tolower(translation_1))
```
### Hindi
hindi_model <- read_delim("data/wiki.hi.vec",
col_names = FALSE,
delim = " ", skip = 1, quote = "^") %>%
select(-302) %>% ## this just has nas
as.data.table() %>%
rename(translated_word = X1)
hindi_targets <- hindi_model[translated_word %in% hindi_words$translation_1]
translated_words
translated_words <- read.csv("data/top_hindi_german_words.csv",
encoding = "UTF-8") %>%
as.data.table() %>%
rename(word = translation_1)
hindi_model
translated_words <- read.csv("data/top_hindi_german_words.csv",
encoding = "UTF-8") %>%
as.data.table() %>%
rename(translated_word = translation_1)
translated_words
m <- merge(translated_words, hindi_model, by = "translated_word")
m
m <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word")
# set
m
dim(m)
names(m)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
nest("vector", 6:305)
?nest
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
nest(6:305, "vector")
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
nest(6:305, .key = "vector")
# setdi
head(hindi_words_with_model)
mutate_at
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(as.numeric, 6:305)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(as.numeric, vars(6:305))
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(as.numeric, vars(X2:X301))
?mutate_at
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric) %>%
nest(6:305, .key = "vector")
hindi_words_with_model
head(hindi_words_with_model)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric)
summary(hindi_words_with_model)
?nest
as_tibble(iris) %>% nest(-Species
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric) %>%
as.data.frame() %>%
nest(6:305, .key = "vector")
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric) %>%
as.data.frame() %>%
nest(6:305, .key = "vector")
hindi_words_with_model
as_tibble(iris)
as_tibble(iris) %>% nest(-Species)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
mutate_at(vars(X2:X301), as.numeric) %>%
as_tibble() %>%
nest(6:305, .key = "vector")
hindi_words_with_model
head(hindi_words_with_model)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word")
head(hindi_words_with_model)
summary(hindi_words_with_model)
german_model <- read_delim("data/wiki.de.vec",
col_names = FALSE,
delim = " ", skip = 1, quote = "^") %>%
select(-302) %>% ## this just has nas
as.data.table() %>%
rename(translated_word = X1)
german_model
german_words_with_model <- translated_words %>%
filter(L1_code == "GER") %>%
merge(german_model, by = "translated_word") %>%
as_tibble() %>%
nest(6:305, .key = "vector")
all_words <- bind_rows(hindi_words_with_model, german_words_with_model)
head(all_words)
german_words_with_model
all_words <- bind_rows(hindi_words_with_model, german_words_with_model) %>%
unnest()
all_words <- bind_rows(hindi_words_with_model, german_words_with_model)
head(all_words)
german_words_with_model <- unnest(german_words_with_model)
german_words_with_model
hindi_words_with_model <- unnest(hindi_words_with_model)
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word")
dim(hindi_words_with_model)
dim(german_words_with_model)
write_feather(all_words, "data/hindi_german_wiki_words.feather")
all_words
hindi_words_with_model
german_words_with_model
hindi_words_with_model <- translated_words %>%
filter(L1_code == "HIN") %>%
merge(hindi_model, by = "translated_word") %>%
as_tibble()
all_words <- bind_rows(hindi_words_with_model, german_words_with_model)
write_feather(all_words, "data/hindi_german_wiki_words.feather")
all_words <- read_feather("data/hindi_german_wiki_words.feather")
german_words_with_model <- translated_words %>%
filter(L1_code == "GER")
german_words_with_model
german_words_with_model <- translated_words %>%
mutate(translated_word = tolower(translated_word)) %>%
filter(L1_code == "GER") %>%
merge(german_model, by = "translated_word")
dim(german_words_with_model)
german_model <- NULL
all_words <- bind_rows(hindi_words_with_model, german_words_with_model)
write_feather(all_words, "data/hindi_german_wiki_words.feather")
all_words <- read_feather("data/hindi_german_wiki_words.feather") %>%
as_tibble() %>%
nest(6:305, .key = "vector")
head(all_words)
all_words <- read_feather("data/hindi_german_wiki_words.feather") %>%
as_tibble() %>%
nest(6:305, .key = "word_vector") %>%
select(L1_code, word_cleaned, translated_word, word_vector)
```
head(all_words)
dim(all_words)
tail(all_words)
as.data.frame(all_words$translated_word)
setwd("~/Documents/research/Projects/XTMEM/paper/SI")
all_d <- read_csv("data/anonymized_data/all_data_munged_A.csv")
head(all_d)
summary(all_d)
filter(all_d, prop_sub > 1)
filter(all_d, prop_bas > 1)
setwd("~/Documents/research/Projects/XTMEM/analysis")
####g et one dataframe (all experiments)
# load libraries and pacakges
source("../analysis/useful_ML.R")
library(tidyverse)
library(jsonlite)
library(stringr)
# set exp number
NUMEXPS <- 12
## Read in and process data
d_raw <- data.frame()
for (j in 1:NUMEXPS){
files = dir(paste0("../experiments/exp", as.character(j), "/production-results/"))
for (i in 1:length(files)[1]) {
s <- fromJSON(paste0("../experiments/exp", as.character(j), "/production-results/", files[i]))
s$answers$asses = ifelse(is.null(s$answers$asses), "NA", s$answers$asses)
d_raw <- bind_rows(d_raw, data.frame(s, exp = j))
}
}
head(d_raw)
names(d_raw) <- str_replace(names(d_raw), "answers.", "")
d_anonymized <- anonymize.sids(d_raw, "WorkerId")
d_anonymized <- read_csv("../data/anonymized_data/all_raw_A.csv")
d_anonymized_long = d_anonymized %>%
gather(variable, value, contains("_")) %>%
mutate(trial_num =  unlist(lapply(strsplit(as.character(variable),
"_T"),function(x) x[2])),
variable = unlist(lapply(strsplit(as.character(variable),
"_"),function(x) x[1]))) %>%
spread(variable, value) %>%
mutate(trial_num = as.numeric(trial_num)) %>%
mutate_if(is.character, funs(as.factor))
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)}))
summary(d_anonymized_long_munged)
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
summary(d_anonymized_long_munged)
head(d_anonymized_long_munged)
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)}))
head(d_anonymized_long_munged)
d_anonymized_long_munged$selected
m = d_anonymized_long_munged$selected[1:10]
m
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
d_anonymized_long_munged[1:10]
d_anonymized_long_munged[1:10,]
d_anonymized_long_munged[1:10,]
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected) %>%
filter(prop_sub> 1 | prop_bas > 1| prop_sup> 1)
d_anonymized_long_munged
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected) %>%
filter(prop_sub> 1 | prop_bas > 1| prop_sup> 1)
d_anonymized_long_munged %>%
filter(condition == "three_basic" | condition == "one")
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected) %>%
filter(prop_sub> 1 | prop_bas > 1)
d_anonymized_long_munged %>%
filter(condition == "three_basic" | condition == "one")
m = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
filter(m, exp == 1, subids == 14, trial_num == 9)
filter(m, exp == 1 & subids == 14 & trial_num == 9)
m
m = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)}))
filter(m, exp == 1 & subids == 14 & trial_num == 9)
filter(m, exp == 1 & subids == 14 & trial_num == 9) %>%
select(selected)
filter(m, exp == 1 & subids == 14 & trial_num == 9) %>%
select(selected) %>%
unnest()
filter(m, exp == 1 & subids == 14 & trial_num == 9) %>%
select(selected) %>%
mutate(selected = unlist(selected))
m = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)}))
filter(m, exp == 1 & subids == 14 & trial_num == 9) %>%
select(selected)
filter(m, exp == 1 & subids == 14 & trial_num == 9)
filter(m, exp == 1 & subids == 14 & trial_num == 8) %>%
select(selected)
filter(m, exp == 1 & subids == 14 & trial_num == 9) %>%
select(selected) %>%
unlist()
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected) %>%
filter(prop_sub > 1 | prop_bas > 1| prop_sup > 1)
length(d_anonymized_long_munged)
dim(d_anonymized_long_munged)
d_anonymized_long_munged
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected)
dim(d_anonymized_long_munged)
28/7200
summary(d_anonymized_long_munged)
d_anonymized_long_munged %>%
count(exp)
d_anonymized_long_munged = d_anonymized_long %>%
select(exp, subids, trial_num, category, condition, selected) %>%
mutate(selected = lapply(str_split(selected, ","),
function(x) {str_sub(x, 4, 6)})) %>%
mutate(prop_sub = unlist(lapply(selected, function(x){sum(x == "sub")/2})),
prop_bas = unlist(lapply(selected, function(x){sum(x == "bas")/2})),
prop_sup = unlist(lapply(selected, function(x){sum(x == "sup")/4}))) %>%
select(-selected) %>%
filter(prop_sub > 1 | prop_bas > 1| prop_sup > 1)
d_anonymized_long_munged %>%
count(exp)
d_anonymized_long_munged %>%
count(exp, condition)
